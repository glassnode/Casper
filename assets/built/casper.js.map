{"version":3,"sources":["newsletter-submit.js","jquery.fitvids.js","dark-mode.js","infinite-scroll.js","newsletter-dismiss.js"],"names":["addFormEventListener","document","formName","afterSuccess","afterError","console","log","form","getElementById","emailField","button","warning","addEventListener","e","preventDefault","email","value","disabled","fetch","body","JSON","stringify","type","headers","Content-Type","method","then","res","err","error","$","fn","fitVids","options","head","div","settings","customSelector","ignore","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","key","className","prefersDarkMode","matchMedia","html","querySelector","toggler","localStorage","getItem","matches","classList","toggle","setItem","contains","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","onPageLoad","status","removeEventListener","onScroll","onResize","response","querySelectorAll","forEach","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive","localStorageDismissKey","bannerHidden","banner","remove","dismissButton","add","name","warningElement","map"],"mappings":"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","file":"casper.js","sourcesContent":["(function (window, document) {\n    const forms = [\n        {\n            name: 'newsletter-hero',\n            afterSuccess: null,\n            afterError: null,\n        },\n        {\n            name: 'newsletter-post-card',\n            afterSuccess: null,\n            afterError: (warningElement) => {\n                warningElement.classList.remove('d-none');\n            }\n        },\n        {\n            name: 'newsletter-banner',\n            afterSuccess: null,\n            afterError: null,\n        },\n    ]\n    forms.map(form => {\n        addFormEventListener(document, form.name, form.afterSuccess, form.afterError);\n    })\n})(window, document);\n\nfunction addFormEventListener(document, formName, afterSuccess = null, afterError = null) {\n    console.log(formName + '-form');\n    let form = document.getElementById(formName + '-form');\n    let emailField = document.getElementById(formName + '-email');\n    let button = document.getElementById(formName + '-submit');\n    let warning = document.getElementById(formName + '-warning');\n\n    if (form) {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            let email = emailField.value;\n            button.disabled = true;\n\n            fetch('http://localhost:3000/api/subscribe', {\n                body: JSON.stringify({ email: email, type: 'newsletter' }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            }).then(res => {\n                console.log(res);\n                if (afterSuccess) {\n                    afterSuccess();\n                }\n                button.disabled = false;\n            }).then(err => {\n                console.error(err);\n                if (afterError) {\n                    afterError(warning);\n                }\n            });\n        });\n    }\n}\n","/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n(function (window, document) {\n    var key = \"glassnode.dark-mode\";\n    var className = \"dark-mode\";\n\n    var prefersDarkMode = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n    var html = document.querySelector(\"html\");\n    var toggler = document.querySelector(\".js-toggle-mode\");\n\n    if (localStorage.getItem(key) === \"true\" || prefersDarkMode.matches) {\n        html.classList.toggle(className);\n    }\n\n    toggler.addEventListener(\"click\", () => {\n        localStorage.setItem(key, !html.classList.contains(className));\n        html.classList.toggle(className);\n    });\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('article.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n","(function (window, document) {\n    let localStorageDismissKey = 'newsletterFloatBannerHidden';\n    let bannerHidden = localStorage.getItem(localStorageDismissKey) === 'true';\n\n    let banner = document.querySelector('.newsletter-banner');\n\n    if (!bannerHidden && banner) {\n        banner.classList.remove('d-none');\n\n        let dismissButton = document.querySelector('.newsletter-banner__dismiss button');\n\n        dismissButton.addEventListener('click', () => {\n            banner.classList.add('d-none');\n            localStorage.setItem(localStorageDismissKey, 'true');\n        })\n    }\n})(window, document);"]}